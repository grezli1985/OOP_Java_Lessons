package OOP_Java_Lessons.lecture.Lesson001;

public class lesson001 {
    

    /*
        Введение в ООП. Концепты и свои типы

        Хранение и обработка данных, чаcть III

     */

        /*
            1. Введение
            2. Класс и объект: детали
            3. Наполнение
            4. Концепты ООП
            5. Примеры использования
            6. Итоги

         */


                /* Введение */


        /*  Способ управления сложными системами: 
            «Разделяй и властвуй».

            Это значит, что программную систему нужно 
            разбить на подсистемы так, чтобы работу каждой 
            из них можно было рассматривать и совершенствовать 
            независимо от других.
        
        
        
            Правильное план – реализация только после абстракций
            Абстракция – что делает?
            Поведение – как делает?
            Спецификация – набор правил, описывающих API

            */




                /* Класс и его экземпляры */

        /*  Класс – это «чертеж» (описание) сущности 
            предметной области, позволяющий выделить 
            некоторые общие характеристики, состояние 
            и поведение, зависящее от состояния.

            Предметная область — множество всех предметов 
            (явлений) решаемой проблемы.
        */

        /*  Экземпляр класса – отдельный представитель 
            класса, имеющий КОНКРЕТНОЕ состояние 
            и поведение, которое полностью определяется 
            описанием класса.

            Состояние – набор данных (полей, атрибутов, 
            членов класса).

            Поведение – функции для работы с данными 
            и выполнения полезной работы.


            Поля                   Конструкторы
            Константы              Методы
            События
        */

        /* ООП – объектно-ориентированное программирование.

            Парадигма (стиль, шаблон) разработки ПО, основными 
            понятиями которой являются классы и объекты.
            Говорят, что разработка в стиле ООП ведется 
            с использованием классов объектов, которые 
            обладают состоянием и поведением, зависящим 
            от этого состояния.
        */

        /* Инкапсуляция – это свойство системы, 
            позволяющее объединить данные и методы, работающие 
            с ними в классе, скрыв детали реализации и защитив 
            от пользователя этого класса объектов.
        */

        /* 
            Наследование – это свойство системы, позволяющее
            описать новый класс на основе уже существующего, 
            с частично или полностью заимствующейся 
            функциональностью.

            Класс, от которого производится наследование, 
            называется базовым или родительским. 
            Новый класс – потомком, наследником или производным
            классом.
        */



        /* Полиморфизм – это свойство системы, использовать
            объекты с одинаковым интерфейсом без информации о
            типе и внутренней структуре объекта.

            Полиморфизм - способность использовать объект вне
            зависимости от его реализации, благодаря,
            полиморфной переменной – это переменная, которая
            может принимать значения разных типов.
        */

















        
}
